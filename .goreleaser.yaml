# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
version: 2
before:
  hooks:
    - go mod tidy
builds:
  - env:
      # goreleaser does not work with CGO, it could also complicate
      # usage by users in CI/CD systems like Terraform Cloud where
      # they are unable to install libraries.
      - CGO_ENABLED=0
      # Optimize for reduced build matrix (only 2 targets)
      - GOMAXPROCS=4
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
      - -buildmode=exe
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
    # Optimize build performance for ARM64
    builder: 'go'
    goos:
    - linux
    - darwin
    goarch:
      - arm64
    binary: '{{ .ProjectName }}_v{{ .Version }}'
archives:
  - format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this in a GitHub action or some other automated pipeline, you 
      # need to pass the batch flag to indicate its not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for your signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
release:
  # GitHub release only, no extra files needed
changelog:
  disable: true